var _user$project$Main$loaderSection = function (model) {
	var _p0 = model.showLoader;
	if (_p0 === false) {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('loader'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('centered'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('blob-1'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('blob-2'),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Main$targetSrc = A2(
	_elm_lang$core$Json_Decode$at,
	{
		ctor: '::',
		_0: 'target',
		_1: {
			ctor: '::',
			_0: 'src',
			_1: {ctor: '[]'}
		}
	},
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$onLoadSrc = function (tagger) {
	return A2(
		_elm_lang$html$Html_Events$on,
		'load',
		A2(_elm_lang$core$Json_Decode$map, tagger, _user$project$Main$targetSrc));
};
var _user$project$Main$header = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('header_container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Elm-giphy'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {searchText: a, gifs: b, api_key: c, showLoader: d, loaders: e};
	});
var _user$project$Main$model = A5(
	_user$project$Main$Model,
	'',
	{
		data: {ctor: '[]'}
	},
	'TFY6tJ4s3i9MtFhW897SLn2ydN2Wa2zS',
	false,
	{ctor: '[]'});
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Loader = F3(
	function (a, b, c) {
		return {id: a, showImgLoader: b, url: c};
	});
var _user$project$Main$Urls = function (a) {
	return {data: a};
};
var _user$project$Main$Url = F2(
	function (a, b) {
		return {id: a, url: b};
	});
var _user$project$Main$Images = function (a) {
	return {images: a};
};
var _user$project$Main$Image = function (a) {
	return {url: a};
};
var _user$project$Main$decodeUrl = A3(
	_elm_lang$core$Json_Decode$map2,
	_user$project$Main$Url,
	A2(_elm_lang$core$Json_Decode$field, 'id', _elm_lang$core$Json_Decode$string),
	A2(
		_elm_lang$core$Json_Decode$field,
		'images',
		A2(
			_elm_lang$core$Json_Decode$map,
			_user$project$Main$Images,
			A2(
				_elm_lang$core$Json_Decode$field,
				'original',
				A2(
					_elm_lang$core$Json_Decode$map,
					_user$project$Main$Image,
					A2(_elm_lang$core$Json_Decode$field, 'url', _elm_lang$core$Json_Decode$string))))));
var _user$project$Main$decodeList = _elm_lang$core$Json_Decode$list(_user$project$Main$decodeUrl);
var _user$project$Main$decodeGif = function (_p1) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_user$project$Main$Urls,
		A2(_elm_lang$core$Json_Decode$field, 'data', _p1));
}(_user$project$Main$decodeList);
var _user$project$Main$StopImgLoader = F2(
	function (a, b) {
		return {ctor: 'StopImgLoader', _0: a, _1: b};
	});
var _user$project$Main$gifSection = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('gifs'),
			_1: {ctor: '[]'}
		},
		A2(
			_elm_lang$core$List$map,
			function (x) {
				return A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('imgContainer'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('gif'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$img,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$src(x.url),
										_1: {
											ctor: '::',
											_0: _user$project$Main$onLoadSrc(
												_user$project$Main$StopImgLoader(x.id)),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class(
													function () {
														var _p2 = x.showImgLoader;
														if (_p2 === true) {
															return 'hide';
														} else {
															return '';
														}
													}()),
												_1: {ctor: '[]'}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: function () {
										var _p3 = x.showImgLoader;
										if (_p3 === true) {
											return A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('lds-hourglass'),
													_1: {ctor: '[]'}
												},
												{ctor: '[]'});
										} else {
											return A2(
												_elm_lang$html$Html$div,
												{ctor: '[]'},
												{ctor: '[]'});
										}
									}(),
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					});
			},
			model.loaders));
};
var _user$project$Main$NewGifs = function (a) {
	return {ctor: 'NewGifs', _0: a};
};
var _user$project$Main$fetchGifs = function (tag) {
	var url = A2(
		_elm_lang$core$Basics_ops['++'],
		'https://api.giphy.com/v1/gifs/search?q=',
		A2(
			_elm_lang$core$Basics_ops['++'],
			tag,
			A2(_elm_lang$core$Basics_ops['++'], '&api_key=', _user$project$Main$model.api_key)));
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$NewGifs,
		A2(_elm_lang$http$Http$get, url, _user$project$Main$decodeGif));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p4 = msg;
		switch (_p4.ctor) {
			case 'UpdateText':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{searchText: _p4._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SearchGif':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{showLoader: true}),
					_1: _user$project$Main$fetchGifs(model.searchText)
				};
			case 'NewGifs':
				if (_p4._0.ctor === 'Ok') {
					var _p5 = _p4._0._0;
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								gifs: _p5,
								showLoader: false,
								loaders: A2(
									_elm_lang$core$List$map,
									function (x) {
										return {id: x.id, showImgLoader: true, url: x.url.images.url};
									},
									_p5.data)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							loaders: A2(
								_elm_lang$core$List$map,
								function (x) {
									var _p6 = _elm_lang$core$Native_Utils.eq(x.id, _p4._0);
									if (_p6 === true) {
										return _elm_lang$core$Native_Utils.update(
											x,
											{showImgLoader: false});
									} else {
										return x;
									}
								},
								model.loaders)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$SearchGif = {ctor: 'SearchGif'};
var _user$project$Main$UpdateText = function (a) {
	return {ctor: 'UpdateText', _0: a};
};
var _user$project$Main$inputSection = function (model) {
	return A2(
		_elm_lang$html$Html$form,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('input_container'),
			_1: {
				ctor: '::',
				_0: A3(
					_elm_lang$html$Html_Events$onWithOptions,
					'submit',
					{stopPropagation: true, preventDefault: true},
					_elm_lang$core$Json_Decode$succeed(_user$project$Main$SearchGif)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Search '),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$UpdateText),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('submit'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value('Search'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$SearchGif),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('main_container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Main$header(model),
			_1: {
				ctor: '::',
				_0: _user$project$Main$inputSection(model),
				_1: {
					ctor: '::',
					_0: _user$project$Main$gifSection(model),
					_1: {
						ctor: '::',
						_0: _user$project$Main$loaderSection(model),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p7) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
