var _user$project$Main$gitSection = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		A2(
			_elm_lang$core$List$map,
			function (x) {
				return A2(
					_elm_lang$html$Html$img,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$src(x.url.images.url),
						_1: {ctor: '[]'}
					},
					{ctor: '[]'});
			},
			model.gifs.data));
};
var _user$project$Main$header = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('header_container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Elm-giphy'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {searchText: a, gifs: b, api_key: c};
	});
var _user$project$Main$model = A3(
	_user$project$Main$Model,
	'',
	{
		data: {ctor: '[]'}
	},
	'TFY6tJ4s3i9MtFhW897SLn2ydN2Wa2zS');
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$model, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Urls = function (a) {
	return {data: a};
};
var _user$project$Main$Url = function (a) {
	return {url: a};
};
var _user$project$Main$Images = function (a) {
	return {images: a};
};
var _user$project$Main$Image = function (a) {
	return {url: a};
};
var _user$project$Main$decodeUrl = function (_p0) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_user$project$Main$Url,
		A2(
			_elm_lang$core$Json_Decode$field,
			'images',
			A2(
				_elm_lang$core$Json_Decode$map,
				_user$project$Main$Images,
				A2(
					_elm_lang$core$Json_Decode$field,
					'original_still',
					A2(
						_elm_lang$core$Json_Decode$map,
						_user$project$Main$Image,
						A2(_elm_lang$core$Json_Decode$field, 'url', _p0))))));
}(_elm_lang$core$Json_Decode$string);
var _user$project$Main$decodeList = _elm_lang$core$Json_Decode$list(_user$project$Main$decodeUrl);
var _user$project$Main$decodeGif = function (_p1) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_user$project$Main$Urls,
		A2(_elm_lang$core$Json_Decode$field, 'data', _p1));
}(_user$project$Main$decodeList);
var _user$project$Main$NewGifs = function (a) {
	return {ctor: 'NewGifs', _0: a};
};
var _user$project$Main$fetchGifs = function (tag) {
	var url = A2(
		_elm_lang$core$Basics_ops['++'],
		'https://api.giphy.com/v1/gifs/search?q=',
		A2(
			_elm_lang$core$Basics_ops['++'],
			tag,
			A2(_elm_lang$core$Basics_ops['++'], '&api_key=', _user$project$Main$model.api_key)));
	return function (_p2) {
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Main$NewGifs,
			A2(_elm_lang$http$Http$get, url, _p2));
	}(_user$project$Main$decodeGif);
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p3 = msg;
		switch (_p3.ctor) {
			case 'UpdateText':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{searchText: _p3._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SearchGif':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$fetchGifs(model.searchText)
				};
			default:
				if (_p3._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{gifs: _p3._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$Main$SearchGif = {ctor: 'SearchGif'};
var _user$project$Main$UpdateText = function (a) {
	return {ctor: 'UpdateText', _0: a};
};
var _user$project$Main$inputSection = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('input_container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('search '),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$UpdateText),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('submit'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value('Search'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$SearchGif),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('main_container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Main$header(model),
			_1: {
				ctor: '::',
				_0: _user$project$Main$inputSection(model),
				_1: {
					ctor: '::',
					_0: _user$project$Main$gitSection(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p4) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
